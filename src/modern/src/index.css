/* Import Giest font */
@font-face {
  font-family: 'Giest';
  src: url('/fonts/Giest-Regular.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Giest';
  src: url('/fonts/Giest-Light.woff2') format('woff2');
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Giest';
  src: url('/fonts/Giest-Medium.woff2') format('woff2');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Giest';
  src: url('/fonts/Giest-Bold.woff2') format('woff2');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

/* Import portfolio styles */
@import './styles/portfolio.css';

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Core styles */
:root {
  --shiny-cta-bg: #000000;
  --shiny-cta-bg-subtle: #1a1818;
  --shiny-cta-fg: #ffffff;
  --shiny-cta-highlight: #008CFF;
  --shiny-cta-highlight-subtle: #66b5ff;
}

@property --gradient-angle { syntax: "<angle>"; initial-value: 0deg; inherits: false; }
@property --gradient-angle-offset { syntax: "<angle>"; initial-value: 0deg; inherits: false; }
@property --gradient-percent { syntax: "<percentage>"; initial-value: 5%; inherits: false; }
@property --gradient-shine { syntax: "<color>"; initial-value: white; inherits: false; }

/* Basic reset and core styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  background-color: rgb(3, 7, 18);
  color: white;
  min-height: 100vh;
}

html { scroll-behavior: smooth; }

body {
  overflow-y: auto !important;
  padding: 0;
  margin: 0;
}

#root { min-height: 100vh; }

/* Section styles */
section {
  min-height: 100vh;
  padding: 1rem;
  position: relative;
  overflow: hidden;
  contain: content;
}

/* Animation utilities */
@layer utilities {
  .animate-fade-in-up {
    animation: fadeInUp 0.5s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
    will-change: transform, opacity;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
    will-change: transform;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite;
    will-change: filter;
  }

  .hover-scale {
    @apply transition-transform duration-300 hover:scale-105;
    will-change: transform;
  }

  .gradient-text {
    @apply bg-clip-text text-transparent bg-gradient-to-r;
  }
}

/* 3D Transform Utilities */
.perspective-1000 {
  perspective: 1000px;
  transform-style: preserve-3d;
  will-change: transform;
}

.transform-style-preserve-3d {
  transform-style: preserve-3d;
  will-change: transform;
}

/* Loading Animation */
.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  border-top-color: #fff;
  animation: spin 1s linear infinite;
  will-change: transform;
}

/* Shiny CTA Button */
.shiny-cta {
  --animation: gradient-angle linear infinite;
  --duration: 3s;
  --shadow-size: 2px;
  isolation: isolate;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline-offset: 4px;
  padding: 1.25rem 2.5rem;
  font-family: inherit;
  font-size: 1.125rem;
  line-height: 1.2;
  border: 1px solid transparent;
  border-radius: 360px;
  color: var(--shiny-cta-fg);
  background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box;
  will-change: transform;
  transform: translateZ(0);
}

.shiny-cta::before,
.shiny-cta::after,
.shiny-cta span::before {
  content: "";
  pointer-events: none;
  position: absolute;
  inset-inline-start: 50%;
  inset-block-start: 50%;
  translate: -50% -50%;
  z-index: -1;
}

.shiny-cta:active { translate: 0 1px; }

/* Dots pattern */
.shiny-cta::before {
  --size: calc(100% - var(--shadow-size) * 3);
  --position: 2px;
  --space: calc(var(--position) * 2);
  width: var(--size);
  height: var(--size);
  background: radial-gradient(
      circle at var(--position) var(--position),
      white calc(var(--position) / 4),
      transparent 0
    )
    padding-box;
  background-size: var(--space) var(--space);
  background-repeat: space;
  mask-image: conic-gradient(
    from calc(var(--gradient-angle) + 45deg),
    black,
    transparent 10% 90%,
    black
  );
  mask-size: 200% 200%;
  mask-position: center;
  animation: var(--animation) var(--duration);
}

.shiny-cta::after {
  --size: calc(100% - var(--shadow-size) * 2);
  width: var(--size);
  height: var(--size);
  background: linear-gradient(
    calc(var(--gradient-angle) + 90deg),
    transparent 0%,
    var(--gradient-shine) var(--gradient-percent),
    transparent calc(var(--gradient-percent) * 2)
  );
  animation: var(--animation) var(--duration);
}

.shiny-cta span {
  position: relative;
  z-index: 1;
}

.shiny-cta span::before {
  --size: calc(100% + var(--shadow-size) * 4);
  width: var(--size);
  height: var(--size);
  background: radial-gradient(
    circle at center,
    var(--gradient-shine) 0%,
    transparent 50%
  );
  opacity: 0;
  animation: shimmer var(--duration) infinite;
}

.shiny-cta:is(:hover, :focus-visible) {
  --gradient-percent: 50%;
  --gradient-shine: var(--shiny-cta-highlight);
}

.shiny-cta:is(:hover, :focus-visible)::before,
.shiny-cta:is(:hover, :focus-visible)::after {
  animation: var(--animation) var(--duration) infinite;
}

.shiny-cta:is(:hover, :focus-visible) span::before {
  animation: shimmer var(--duration) infinite;
}

/* Animations */
@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

@keyframes glow {
  0%, 100% { filter: brightness(100%); }
  50% { filter: brightness(120%); }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes gradient-angle {
  to { --gradient-angle: 360deg; }
}

@keyframes shimmer {
  0%, 100% { opacity: 0; }
  50% { opacity: 0.5; }
}

/* Parallax sections */
.parallax-section {
  position: relative;
  overflow: hidden;
}

.parallax-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  will-change: transform;
}